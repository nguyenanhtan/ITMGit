<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx 
                http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd" 
             xmlns:util="http://www.springframework.org/schema/util">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />
    <beans:bean id="gson" class="com.google.gson.Gson"/>
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/assets/**" location="/assets/" />
    
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <!--    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>	-->
    <context:component-scan base-package="vn.webapp" />
    
    <!-- JDBC Data Source. It is assumed you have MySQL running on localhost port 3306 with 
    username root and blank password. Change below if it's not the case -->
    <beans:bean id="myDataSource" 
                class="org.apache.commons.dbcp.BasicDataSource" 
                destroy-method="close">

        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://localhost:3306/itm_spring?useUnicode=true&amp;characterEncoding=utf-8"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value="1234567890"/>
        <!--<beans:property name="validationQuery" value="SELECT 1"/>-->
    </beans:bean>
    <!-- Hibernate Session Factory -->
    <beans:bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="myDataSource"/>
        <beans:property name="packagesToScan">
            <beans:array>
                <beans:value>vn.webapp</beans:value>
            </beans:array>
        </beans:property>
        <beans:property name="hibernateProperties">            
            <beans:value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
            </beans:value>
        </beans:property>         
    </beans:bean>
    <!-- Hibernate Transaction Manager -->
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="mySessionFactory"/>
    </beans:bean>
  
    <!-- Tiles 3 -->
    <beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"  p:order="0"/>  
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">  
        <beans:property name="definitions" value="/views/tiles.xml" />  
    </beans:bean> 
    
    <beans:bean id="executor" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <beans:constructor-arg type="int" value="30"/>
    </beans:bean>
    
    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <beans:property name="basename" value="/WEB-INF/messages" />  
    </beans:bean>
    
    <!-- end config send mail-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    
    <beans:bean id="userDAO" class="vn.webapp.dao.UserDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="userService" class="vn.webapp.service.UserServiceImpl">
        <beans:property name="userDAO" ref="userDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="defensesessionDAO" class="vn.webapp.dao.DefensesessionDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="DefensessionService" class="vn.webapp.service.DefensessionServiceImpl">
        <beans:property name="defenDAO" ref="defensesessionDAO"></beans:property>
    </beans:bean>
    
    <beans:bean id="InstitutesDAO" class="vn.webapp.dao.InstitutesDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="InstitutesService" class="vn.webapp.service.InstitutesServiceImpl">
        <beans:property name="institutesDAO" ref="InstitutesDAO"></beans:property>
    </beans:bean>

    <beans:bean id="DepartmentsDAO" class="vn.webapp.dao.DepartmentsDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="DepartmentsSevice" class="vn.webapp.service.DepartmentsSeviceImpl">
        <beans:property name="departmentDAO" ref="DepartmentsDAO"></beans:property>
    </beans:bean>

    <beans:bean id="ClassesDAO" class="vn.webapp.dao.ClassesDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="ClassesService" class="vn.webapp.service.ClassesServiceImpl">
        <beans:property name="classDAO" ref="ClassesDAO"></beans:property>
    </beans:bean>

    <beans:bean id="SuperviseStudentDAO" class="vn.webapp.dao.SuperviseStudentDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="SuperviseStudentService" class="vn.webapp.service.SuperviseStudentServiceImpl">
        <beans:property name="supStudentDAO" ref="SuperviseStudentDAO"></beans:property>
    </beans:bean>

    <beans:bean id="ProfessorDAO" class="vn.webapp.dao.ProfessorDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="ProfessorService" class="vn.webapp.service.ProfessorServiceImpl">
        <beans:property name="professorDAO" ref="ProfessorDAO"></beans:property>
    </beans:bean>

    <beans:bean id="SubjectCategoryDAO" class="vn.webapp.dao.SubjectCategoryDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="SubjectCategoryService" class="vn.webapp.service.SubjectCategoryServiceImpl">
        <beans:property name="subjectCategory" ref="SubjectCategoryDAO"></beans:property>
    </beans:bean>

    <beans:bean id="SlotRoomManagerDAO" class="vn.webapp.dao.SlotRoomManagerDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="SlotRoomManagerService" class="vn.webapp.service.SlotRoomManagerServiceImpl">
        <beans:property name="slotRoomManagerDAO" ref="SlotRoomManagerDAO"></beans:property>
    </beans:bean>
</beans:beans>